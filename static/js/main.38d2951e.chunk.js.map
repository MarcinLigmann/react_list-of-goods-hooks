{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReverse","setIsReverse","handleSortBy","value","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","shouldShowReset","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,SAACC,GAAD,OAAqB,WACxCJ,EAAYI,KAYRC,EAzCD,SACLA,EADK,GAGJ,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,UAENK,EAAY,YAAOD,GAEzB,OAAQN,GACN,KAAKL,EAASa,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU7C,OAJIZ,GACFK,EAAaQ,UAGRR,EAoBOS,CAAkBpB,EAAiB,CAAEI,WAAUE,cACvDe,EAAmBjB,IAAaL,EAASI,MAAQG,EAEvD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYpB,IAAaL,EAASa,WACtCa,QAASjB,EAAaT,EAASa,UAJjC,iCASA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYpB,IAAaL,EAASkB,SACtCQ,QAASjB,EAAaT,EAASkB,QAJjC,4BASA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAalB,IACjBmB,QArCoB,WAC1BlB,GAAcD,IAgCV,qBASCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1CgB,WACxBpB,EAAYN,EAASI,MACrBI,GAAa,IAqCP,sBAUJ,6BACE,6BACGG,EAAMgB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCjHrDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38d2951e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReverse: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReverse }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const handleSortBy = (value: SortType) => () => {\n    setSortType(value);\n  };\n\n  const handleReverse = () => () => {\n    setIsReverse(!isReverse);\n  };\n\n  const handleReset = () => () => {\n    setSortType(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReverse });\n  const shouldShowReset = (sortType !== SortType.NONE || isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={handleSortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={handleSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReverse })}\n          onClick={handleReverse()}\n        >\n          Reverse\n        </button>\n\n        {shouldShowReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}